class Solution {
public:
    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int k) {
        vector<vector<pair<int, int>>> adj(n);
        for(auto it: flights){
            adj[it[0]].emplace_back(it[1],it[2]);
        }

        vector<int> p(n,1e9);
        p[src]=0;
        queue<tuple<int, int, int>> q;
        q.push({src, 0, 0});

        while(!q.empty()){
            auto [u, cost, stops] = q.front();
            q.pop();

            if (stops > k) continue;

            for (auto& [v, price] : adj[u]) {
                if (cost + price < p[v]) {
                    p[v] = cost + price;
                    q.push({v, p[v], stops + 1});
                }
            }
        }
        if(p[dst]==1e9){
            return -1;
        }else{
            return p[dst];
        }
    }
};
